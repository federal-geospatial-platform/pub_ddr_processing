name: Test ddr_plugin
on: [push]

env:
  # Plugin name/directory where the code for the plugin is stored 
  PLUGIN_NAME: pub_ddr_processing
  # python notation to test running inside plugin
  #  TESTS_RUN_FUNCTION: test.test_suite.test_package
  # Docker settings
  DOCKER_IMAGE: qgis/qgis

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        docker_tags: [latest]
        # docker_tags: [release-3_16, release-3_18, latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      #with:
      #  node-version: 'latest'

    - name: Install Mockoon
      run: npm install -g @mockoon/cli

    - name: List files
      run: ls -l
    
    - name: Start Mockoon server
      run: mockoon-cli start --data ./mockoon.json
      
    - name: Install ArgoCD CLI
      id: install_argocd
      shell: bash
      run: |
          curl -X 'POST' 'http://localhost:3000/api/login' -H 'accept: application/json' -H 'Content-Type: application/json' -d '{"password": "PASSWORD", "username": "alexandre-roy"}'
          
          
    - name: Docker pull and create qgis-testing-environment
      run: |
        docker pull "$DOCKER_IMAGE":${{ matrix.docker_tags }}
        docker run -d --name qgis-testing-environment -v "$GITHUB_WORKSPACE":/tests_directory -e DISPLAY=:99 "$DOCKER_IMAGE":${{ matrix.docker_tags }}
        
    - name: Docker set up QGIS
      run: |
        docker exec qgis-testing-environment sh -c "apt install libxcb-cursor0"
        docker exec qgis-testing-environment sh -c "pwd"
        docker exec qgis-testing-environment sh -c "cd tests_directory/pub_ddr_processing"
        docker exec qgis-testing-environment sh -c "ls -l"
        
        set +e
        docker exec qgis-testing-environment sh -c "qgis_process run /tests_directory/pub_ddr_processing/patch_mockoon_user.py"
        echo "exitcode=$?" >> $GITHUB_OUTPUT
        
        docker exec qgis-testing-environment sh -c "qgis_setup.sh $PLUGIN_NAME"
        
        #docker exec qgis-testing-environment sh -c "rm -f /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
        #docker exec qgis-testing-environment sh -c "ln -s /tests_directory/$PLUGIN_NAME /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
        
        docker exec qgis-testing-environment sh -c "qgis_process run pub_ddr_processing:login --distance_units=meters --area_units=m2 --ellipsoid=EPSG:7019 --AUTHENTICATION=p7h9tdd --ENVIRONMENT=Testing"
        
        #docker exec qgis-testing-environment sh -c "ls -l tests_directory"
        #docker exec qgis-testing-environment sh -c "cd tests_directory"
        #docker exec qgis-testing-environment sh -c "pwd"
        #docker exec qgis-testing-environment sh -c "ls -l"
        # docker exec qgis-testing-environment sh -c "cd pub_ddr_processing"
        # docker exec qgis-testing-environment sh -c "ls -l"
        #docker exec qgis-testing-environment sh -c "cd .."
        #docker exec qgis-testing-environment sh -c "qgis_process run patch_mockoon_user.py"
        #docker exec qgis-testing-environment sh -c "qgis_setup.sh $PLUGIN_NAME"
        #docker exec qgis-testing-environment sh -c "rm -f /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
        #docker exec qgis-testing-environment sh -c "ln -s /tests_directory/$PLUGIN_NAME /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
        #docker exec qgis-testing-environment sh -c "cd tests_directory/$PLUGIN_NAME"
        #docker exec qgis-testing-environment sh -c "ls -l"
        #docker exec qgis-testing-environment sh -c "qgis_process run tests_directory/$PLUGIN_NAME/patch_mockoon_user.py"
        # docker exec qgis-testing-environment sh -c "rm -f /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
        # docker exec qgis-testing-environment sh -c "ln -s /tests_directory/$PLUGIN_NAME /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
        # docker exec qgis-testing-environment sh -c "qgis_process run  patch_mockoon_user.py"
        # docker exec qgis-testing-environment sh -c "qgis_process run pub_ddr_processing:login --distance_units=meters --area_units=m2 --ellipsoid=EPSG:7019 --AUTHENTICATION=p7h9tdd --ENVIRONMENT=Testing"
        # docker exec qgis-testing-environment sh -c "qgis_process list"
        # docker exec qgis-testing-environment sh -c "pip3 install -r /tests_directory/REQUIREMENTS_TESTING.txt"
        # docker exec qgis-testing-environment sh -c "apt-get update"
        # docker exec qgis-testing-environment sh -c "apt-get install -y r-base"
